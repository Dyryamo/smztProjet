package com.ctgu.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class CommentsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Comments
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Comments
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Comments
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Comments
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    public CommentsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Comments
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Comments
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Comments
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Comments
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Comments
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Comments
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Comments
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Comments
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Comments
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Comments
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Comments
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andCidIsNull() {
            addCriterion("CID is null");
            return (Criteria) this;
        }

        public Criteria andCidIsNotNull() {
            addCriterion("CID is not null");
            return (Criteria) this;
        }

        public Criteria andCidEqualTo(Integer value) {
            addCriterion("CID =", value, "cid");
            return (Criteria) this;
        }

        public Criteria andCidNotEqualTo(Integer value) {
            addCriterion("CID <>", value, "cid");
            return (Criteria) this;
        }

        public Criteria andCidGreaterThan(Integer value) {
            addCriterion("CID >", value, "cid");
            return (Criteria) this;
        }

        public Criteria andCidGreaterThanOrEqualTo(Integer value) {
            addCriterion("CID >=", value, "cid");
            return (Criteria) this;
        }

        public Criteria andCidLessThan(Integer value) {
            addCriterion("CID <", value, "cid");
            return (Criteria) this;
        }

        public Criteria andCidLessThanOrEqualTo(Integer value) {
            addCriterion("CID <=", value, "cid");
            return (Criteria) this;
        }

        public Criteria andCidIn(List<Integer> values) {
            addCriterion("CID in", values, "cid");
            return (Criteria) this;
        }

        public Criteria andCidNotIn(List<Integer> values) {
            addCriterion("CID not in", values, "cid");
            return (Criteria) this;
        }

        public Criteria andCidBetween(Integer value1, Integer value2) {
            addCriterion("CID between", value1, value2, "cid");
            return (Criteria) this;
        }

        public Criteria andCidNotBetween(Integer value1, Integer value2) {
            addCriterion("CID not between", value1, value2, "cid");
            return (Criteria) this;
        }

        public Criteria andUsersUidIsNull() {
            addCriterion("Users_UID is null");
            return (Criteria) this;
        }

        public Criteria andUsersUidIsNotNull() {
            addCriterion("Users_UID is not null");
            return (Criteria) this;
        }

        public Criteria andUsersUidEqualTo(Integer value) {
            addCriterion("Users_UID =", value, "usersUid");
            return (Criteria) this;
        }

        public Criteria andUsersUidNotEqualTo(Integer value) {
            addCriterion("Users_UID <>", value, "usersUid");
            return (Criteria) this;
        }

        public Criteria andUsersUidGreaterThan(Integer value) {
            addCriterion("Users_UID >", value, "usersUid");
            return (Criteria) this;
        }

        public Criteria andUsersUidGreaterThanOrEqualTo(Integer value) {
            addCriterion("Users_UID >=", value, "usersUid");
            return (Criteria) this;
        }

        public Criteria andUsersUidLessThan(Integer value) {
            addCriterion("Users_UID <", value, "usersUid");
            return (Criteria) this;
        }

        public Criteria andUsersUidLessThanOrEqualTo(Integer value) {
            addCriterion("Users_UID <=", value, "usersUid");
            return (Criteria) this;
        }

        public Criteria andUsersUidIn(List<Integer> values) {
            addCriterion("Users_UID in", values, "usersUid");
            return (Criteria) this;
        }

        public Criteria andUsersUidNotIn(List<Integer> values) {
            addCriterion("Users_UID not in", values, "usersUid");
            return (Criteria) this;
        }

        public Criteria andUsersUidBetween(Integer value1, Integer value2) {
            addCriterion("Users_UID between", value1, value2, "usersUid");
            return (Criteria) this;
        }

        public Criteria andUsersUidNotBetween(Integer value1, Integer value2) {
            addCriterion("Users_UID not between", value1, value2, "usersUid");
            return (Criteria) this;
        }

        public Criteria andArticlesAidIsNull() {
            addCriterion("Articles_AID is null");
            return (Criteria) this;
        }

        public Criteria andArticlesAidIsNotNull() {
            addCriterion("Articles_AID is not null");
            return (Criteria) this;
        }

        public Criteria andArticlesAidEqualTo(Integer value) {
            addCriterion("Articles_AID =", value, "articlesAid");
            return (Criteria) this;
        }

        public Criteria andArticlesAidNotEqualTo(Integer value) {
            addCriterion("Articles_AID <>", value, "articlesAid");
            return (Criteria) this;
        }

        public Criteria andArticlesAidGreaterThan(Integer value) {
            addCriterion("Articles_AID >", value, "articlesAid");
            return (Criteria) this;
        }

        public Criteria andArticlesAidGreaterThanOrEqualTo(Integer value) {
            addCriterion("Articles_AID >=", value, "articlesAid");
            return (Criteria) this;
        }

        public Criteria andArticlesAidLessThan(Integer value) {
            addCriterion("Articles_AID <", value, "articlesAid");
            return (Criteria) this;
        }

        public Criteria andArticlesAidLessThanOrEqualTo(Integer value) {
            addCriterion("Articles_AID <=", value, "articlesAid");
            return (Criteria) this;
        }

        public Criteria andArticlesAidIn(List<Integer> values) {
            addCriterion("Articles_AID in", values, "articlesAid");
            return (Criteria) this;
        }

        public Criteria andArticlesAidNotIn(List<Integer> values) {
            addCriterion("Articles_AID not in", values, "articlesAid");
            return (Criteria) this;
        }

        public Criteria andArticlesAidBetween(Integer value1, Integer value2) {
            addCriterion("Articles_AID between", value1, value2, "articlesAid");
            return (Criteria) this;
        }

        public Criteria andArticlesAidNotBetween(Integer value1, Integer value2) {
            addCriterion("Articles_AID not between", value1, value2, "articlesAid");
            return (Criteria) this;
        }

        public Criteria andCposttimeIsNull() {
            addCriterion("CPostTime is null");
            return (Criteria) this;
        }

        public Criteria andCposttimeIsNotNull() {
            addCriterion("CPostTime is not null");
            return (Criteria) this;
        }

        public Criteria andCposttimeEqualTo(Date value) {
            addCriterionForJDBCDate("CPostTime =", value, "cposttime");
            return (Criteria) this;
        }

        public Criteria andCposttimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("CPostTime <>", value, "cposttime");
            return (Criteria) this;
        }

        public Criteria andCposttimeGreaterThan(Date value) {
            addCriterionForJDBCDate("CPostTime >", value, "cposttime");
            return (Criteria) this;
        }

        public Criteria andCposttimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CPostTime >=", value, "cposttime");
            return (Criteria) this;
        }

        public Criteria andCposttimeLessThan(Date value) {
            addCriterionForJDBCDate("CPostTime <", value, "cposttime");
            return (Criteria) this;
        }

        public Criteria andCposttimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CPostTime <=", value, "cposttime");
            return (Criteria) this;
        }

        public Criteria andCposttimeIn(List<Date> values) {
            addCriterionForJDBCDate("CPostTime in", values, "cposttime");
            return (Criteria) this;
        }

        public Criteria andCposttimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("CPostTime not in", values, "cposttime");
            return (Criteria) this;
        }

        public Criteria andCposttimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CPostTime between", value1, value2, "cposttime");
            return (Criteria) this;
        }

        public Criteria andCposttimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CPostTime not between", value1, value2, "cposttime");
            return (Criteria) this;
        }

        public Criteria andCupcountsIsNull() {
            addCriterion("CUpCounts is null");
            return (Criteria) this;
        }

        public Criteria andCupcountsIsNotNull() {
            addCriterion("CUpCounts is not null");
            return (Criteria) this;
        }

        public Criteria andCupcountsEqualTo(Integer value) {
            addCriterion("CUpCounts =", value, "cupcounts");
            return (Criteria) this;
        }

        public Criteria andCupcountsNotEqualTo(Integer value) {
            addCriterion("CUpCounts <>", value, "cupcounts");
            return (Criteria) this;
        }

        public Criteria andCupcountsGreaterThan(Integer value) {
            addCriterion("CUpCounts >", value, "cupcounts");
            return (Criteria) this;
        }

        public Criteria andCupcountsGreaterThanOrEqualTo(Integer value) {
            addCriterion("CUpCounts >=", value, "cupcounts");
            return (Criteria) this;
        }

        public Criteria andCupcountsLessThan(Integer value) {
            addCriterion("CUpCounts <", value, "cupcounts");
            return (Criteria) this;
        }

        public Criteria andCupcountsLessThanOrEqualTo(Integer value) {
            addCriterion("CUpCounts <=", value, "cupcounts");
            return (Criteria) this;
        }

        public Criteria andCupcountsIn(List<Integer> values) {
            addCriterion("CUpCounts in", values, "cupcounts");
            return (Criteria) this;
        }

        public Criteria andCupcountsNotIn(List<Integer> values) {
            addCriterion("CUpCounts not in", values, "cupcounts");
            return (Criteria) this;
        }

        public Criteria andCupcountsBetween(Integer value1, Integer value2) {
            addCriterion("CUpCounts between", value1, value2, "cupcounts");
            return (Criteria) this;
        }

        public Criteria andCupcountsNotBetween(Integer value1, Integer value2) {
            addCriterion("CUpCounts not between", value1, value2, "cupcounts");
            return (Criteria) this;
        }

        public Criteria andCcontentIsNull() {
            addCriterion("CContent is null");
            return (Criteria) this;
        }

        public Criteria andCcontentIsNotNull() {
            addCriterion("CContent is not null");
            return (Criteria) this;
        }

        public Criteria andCcontentEqualTo(String value) {
            addCriterion("CContent =", value, "ccontent");
            return (Criteria) this;
        }

        public Criteria andCcontentNotEqualTo(String value) {
            addCriterion("CContent <>", value, "ccontent");
            return (Criteria) this;
        }

        public Criteria andCcontentGreaterThan(String value) {
            addCriterion("CContent >", value, "ccontent");
            return (Criteria) this;
        }

        public Criteria andCcontentGreaterThanOrEqualTo(String value) {
            addCriterion("CContent >=", value, "ccontent");
            return (Criteria) this;
        }

        public Criteria andCcontentLessThan(String value) {
            addCriterion("CContent <", value, "ccontent");
            return (Criteria) this;
        }

        public Criteria andCcontentLessThanOrEqualTo(String value) {
            addCriterion("CContent <=", value, "ccontent");
            return (Criteria) this;
        }

        public Criteria andCcontentLike(String value) {
            addCriterion("CContent like", value, "ccontent");
            return (Criteria) this;
        }

        public Criteria andCcontentNotLike(String value) {
            addCriterion("CContent not like", value, "ccontent");
            return (Criteria) this;
        }

        public Criteria andCcontentIn(List<String> values) {
            addCriterion("CContent in", values, "ccontent");
            return (Criteria) this;
        }

        public Criteria andCcontentNotIn(List<String> values) {
            addCriterion("CContent not in", values, "ccontent");
            return (Criteria) this;
        }

        public Criteria andCcontentBetween(String value1, String value2) {
            addCriterion("CContent between", value1, value2, "ccontent");
            return (Criteria) this;
        }

        public Criteria andCcontentNotBetween(String value1, String value2) {
            addCriterion("CContent not between", value1, value2, "ccontent");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Comments
     *
     * @mbg.generated do_not_delete_during_merge Thu Dec 20 04:55:17 PST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Comments
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}