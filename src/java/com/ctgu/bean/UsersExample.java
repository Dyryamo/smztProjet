package com.ctgu.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class UsersExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Users
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Users
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Users
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    public UsersExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Users
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andUidIsNull() {
            addCriterion("UID is null");
            return (Criteria) this;
        }

        public Criteria andUidIsNotNull() {
            addCriterion("UID is not null");
            return (Criteria) this;
        }

        public Criteria andUidEqualTo(Integer value) {
            addCriterion("UID =", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotEqualTo(Integer value) {
            addCriterion("UID <>", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThan(Integer value) {
            addCriterion("UID >", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThanOrEqualTo(Integer value) {
            addCriterion("UID >=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThan(Integer value) {
            addCriterion("UID <", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThanOrEqualTo(Integer value) {
            addCriterion("UID <=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidIn(List<Integer> values) {
            addCriterion("UID in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotIn(List<Integer> values) {
            addCriterion("UID not in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidBetween(Integer value1, Integer value2) {
            addCriterion("UID between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotBetween(Integer value1, Integer value2) {
            addCriterion("UID not between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andUnameIsNull() {
            addCriterion("UName is null");
            return (Criteria) this;
        }

        public Criteria andUnameIsNotNull() {
            addCriterion("UName is not null");
            return (Criteria) this;
        }

        public Criteria andUnameEqualTo(String value) {
            addCriterion("UName =", value, "uname");
            return (Criteria) this;
        }

        public Criteria andUnameNotEqualTo(String value) {
            addCriterion("UName <>", value, "uname");
            return (Criteria) this;
        }

        public Criteria andUnameGreaterThan(String value) {
            addCriterion("UName >", value, "uname");
            return (Criteria) this;
        }

        public Criteria andUnameGreaterThanOrEqualTo(String value) {
            addCriterion("UName >=", value, "uname");
            return (Criteria) this;
        }

        public Criteria andUnameLessThan(String value) {
            addCriterion("UName <", value, "uname");
            return (Criteria) this;
        }

        public Criteria andUnameLessThanOrEqualTo(String value) {
            addCriterion("UName <=", value, "uname");
            return (Criteria) this;
        }

        public Criteria andUnameLike(String value) {
            addCriterion("UName like", value, "uname");
            return (Criteria) this;
        }

        public Criteria andUnameNotLike(String value) {
            addCriterion("UName not like", value, "uname");
            return (Criteria) this;
        }

        public Criteria andUnameIn(List<String> values) {
            addCriterion("UName in", values, "uname");
            return (Criteria) this;
        }

        public Criteria andUnameNotIn(List<String> values) {
            addCriterion("UName not in", values, "uname");
            return (Criteria) this;
        }

        public Criteria andUnameBetween(String value1, String value2) {
            addCriterion("UName between", value1, value2, "uname");
            return (Criteria) this;
        }

        public Criteria andUnameNotBetween(String value1, String value2) {
            addCriterion("UName not between", value1, value2, "uname");
            return (Criteria) this;
        }

        public Criteria andUpasswordIsNull() {
            addCriterion("UPassword is null");
            return (Criteria) this;
        }

        public Criteria andUpasswordIsNotNull() {
            addCriterion("UPassword is not null");
            return (Criteria) this;
        }

        public Criteria andUpasswordEqualTo(String value) {
            addCriterion("UPassword =", value, "upassword");
            return (Criteria) this;
        }

        public Criteria andUpasswordNotEqualTo(String value) {
            addCriterion("UPassword <>", value, "upassword");
            return (Criteria) this;
        }

        public Criteria andUpasswordGreaterThan(String value) {
            addCriterion("UPassword >", value, "upassword");
            return (Criteria) this;
        }

        public Criteria andUpasswordGreaterThanOrEqualTo(String value) {
            addCriterion("UPassword >=", value, "upassword");
            return (Criteria) this;
        }

        public Criteria andUpasswordLessThan(String value) {
            addCriterion("UPassword <", value, "upassword");
            return (Criteria) this;
        }

        public Criteria andUpasswordLessThanOrEqualTo(String value) {
            addCriterion("UPassword <=", value, "upassword");
            return (Criteria) this;
        }

        public Criteria andUpasswordLike(String value) {
            addCriterion("UPassword like", value, "upassword");
            return (Criteria) this;
        }

        public Criteria andUpasswordNotLike(String value) {
            addCriterion("UPassword not like", value, "upassword");
            return (Criteria) this;
        }

        public Criteria andUpasswordIn(List<String> values) {
            addCriterion("UPassword in", values, "upassword");
            return (Criteria) this;
        }

        public Criteria andUpasswordNotIn(List<String> values) {
            addCriterion("UPassword not in", values, "upassword");
            return (Criteria) this;
        }

        public Criteria andUpasswordBetween(String value1, String value2) {
            addCriterion("UPassword between", value1, value2, "upassword");
            return (Criteria) this;
        }

        public Criteria andUpasswordNotBetween(String value1, String value2) {
            addCriterion("UPassword not between", value1, value2, "upassword");
            return (Criteria) this;
        }

        public Criteria andUemailIsNull() {
            addCriterion("UEmail is null");
            return (Criteria) this;
        }

        public Criteria andUemailIsNotNull() {
            addCriterion("UEmail is not null");
            return (Criteria) this;
        }

        public Criteria andUemailEqualTo(String value) {
            addCriterion("UEmail =", value, "uemail");
            return (Criteria) this;
        }

        public Criteria andUemailNotEqualTo(String value) {
            addCriterion("UEmail <>", value, "uemail");
            return (Criteria) this;
        }

        public Criteria andUemailGreaterThan(String value) {
            addCriterion("UEmail >", value, "uemail");
            return (Criteria) this;
        }

        public Criteria andUemailGreaterThanOrEqualTo(String value) {
            addCriterion("UEmail >=", value, "uemail");
            return (Criteria) this;
        }

        public Criteria andUemailLessThan(String value) {
            addCriterion("UEmail <", value, "uemail");
            return (Criteria) this;
        }

        public Criteria andUemailLessThanOrEqualTo(String value) {
            addCriterion("UEmail <=", value, "uemail");
            return (Criteria) this;
        }

        public Criteria andUemailLike(String value) {
            addCriterion("UEmail like", value, "uemail");
            return (Criteria) this;
        }

        public Criteria andUemailNotLike(String value) {
            addCriterion("UEmail not like", value, "uemail");
            return (Criteria) this;
        }

        public Criteria andUemailIn(List<String> values) {
            addCriterion("UEmail in", values, "uemail");
            return (Criteria) this;
        }

        public Criteria andUemailNotIn(List<String> values) {
            addCriterion("UEmail not in", values, "uemail");
            return (Criteria) this;
        }

        public Criteria andUemailBetween(String value1, String value2) {
            addCriterion("UEmail between", value1, value2, "uemail");
            return (Criteria) this;
        }

        public Criteria andUemailNotBetween(String value1, String value2) {
            addCriterion("UEmail not between", value1, value2, "uemail");
            return (Criteria) this;
        }

        public Criteria andUbirthdayIsNull() {
            addCriterion("UBirthday is null");
            return (Criteria) this;
        }

        public Criteria andUbirthdayIsNotNull() {
            addCriterion("UBirthday is not null");
            return (Criteria) this;
        }

        public Criteria andUbirthdayEqualTo(Date value) {
            addCriterionForJDBCDate("UBirthday =", value, "ubirthday");
            return (Criteria) this;
        }

        public Criteria andUbirthdayNotEqualTo(Date value) {
            addCriterionForJDBCDate("UBirthday <>", value, "ubirthday");
            return (Criteria) this;
        }

        public Criteria andUbirthdayGreaterThan(Date value) {
            addCriterionForJDBCDate("UBirthday >", value, "ubirthday");
            return (Criteria) this;
        }

        public Criteria andUbirthdayGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UBirthday >=", value, "ubirthday");
            return (Criteria) this;
        }

        public Criteria andUbirthdayLessThan(Date value) {
            addCriterionForJDBCDate("UBirthday <", value, "ubirthday");
            return (Criteria) this;
        }

        public Criteria andUbirthdayLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("UBirthday <=", value, "ubirthday");
            return (Criteria) this;
        }

        public Criteria andUbirthdayIn(List<Date> values) {
            addCriterionForJDBCDate("UBirthday in", values, "ubirthday");
            return (Criteria) this;
        }

        public Criteria andUbirthdayNotIn(List<Date> values) {
            addCriterionForJDBCDate("UBirthday not in", values, "ubirthday");
            return (Criteria) this;
        }

        public Criteria andUbirthdayBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UBirthday between", value1, value2, "ubirthday");
            return (Criteria) this;
        }

        public Criteria andUbirthdayNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("UBirthday not between", value1, value2, "ubirthday");
            return (Criteria) this;
        }

        public Criteria andUheadIsNull() {
            addCriterion("UHead is null");
            return (Criteria) this;
        }

        public Criteria andUheadIsNotNull() {
            addCriterion("UHead is not null");
            return (Criteria) this;
        }

        public Criteria andUheadEqualTo(String value) {
            addCriterion("UHead =", value, "uhead");
            return (Criteria) this;
        }

        public Criteria andUheadNotEqualTo(String value) {
            addCriterion("UHead <>", value, "uhead");
            return (Criteria) this;
        }

        public Criteria andUheadGreaterThan(String value) {
            addCriterion("UHead >", value, "uhead");
            return (Criteria) this;
        }

        public Criteria andUheadGreaterThanOrEqualTo(String value) {
            addCriterion("UHead >=", value, "uhead");
            return (Criteria) this;
        }

        public Criteria andUheadLessThan(String value) {
            addCriterion("UHead <", value, "uhead");
            return (Criteria) this;
        }

        public Criteria andUheadLessThanOrEqualTo(String value) {
            addCriterion("UHead <=", value, "uhead");
            return (Criteria) this;
        }

        public Criteria andUheadLike(String value) {
            addCriterion("UHead like", value, "uhead");
            return (Criteria) this;
        }

        public Criteria andUheadNotLike(String value) {
            addCriterion("UHead not like", value, "uhead");
            return (Criteria) this;
        }

        public Criteria andUheadIn(List<String> values) {
            addCriterion("UHead in", values, "uhead");
            return (Criteria) this;
        }

        public Criteria andUheadNotIn(List<String> values) {
            addCriterion("UHead not in", values, "uhead");
            return (Criteria) this;
        }

        public Criteria andUheadBetween(String value1, String value2) {
            addCriterion("UHead between", value1, value2, "uhead");
            return (Criteria) this;
        }

        public Criteria andUheadNotBetween(String value1, String value2) {
            addCriterion("UHead not between", value1, value2, "uhead");
            return (Criteria) this;
        }

        public Criteria andUsexIsNull() {
            addCriterion("USex is null");
            return (Criteria) this;
        }

        public Criteria andUsexIsNotNull() {
            addCriterion("USex is not null");
            return (Criteria) this;
        }

        public Criteria andUsexEqualTo(Integer value) {
            addCriterion("USex =", value, "usex");
            return (Criteria) this;
        }

        public Criteria andUsexNotEqualTo(Integer value) {
            addCriterion("USex <>", value, "usex");
            return (Criteria) this;
        }

        public Criteria andUsexGreaterThan(Integer value) {
            addCriterion("USex >", value, "usex");
            return (Criteria) this;
        }

        public Criteria andUsexGreaterThanOrEqualTo(Integer value) {
            addCriterion("USex >=", value, "usex");
            return (Criteria) this;
        }

        public Criteria andUsexLessThan(Integer value) {
            addCriterion("USex <", value, "usex");
            return (Criteria) this;
        }

        public Criteria andUsexLessThanOrEqualTo(Integer value) {
            addCriterion("USex <=", value, "usex");
            return (Criteria) this;
        }

        public Criteria andUsexIn(List<Integer> values) {
            addCriterion("USex in", values, "usex");
            return (Criteria) this;
        }

        public Criteria andUsexNotIn(List<Integer> values) {
            addCriterion("USex not in", values, "usex");
            return (Criteria) this;
        }

        public Criteria andUsexBetween(Integer value1, Integer value2) {
            addCriterion("USex between", value1, value2, "usex");
            return (Criteria) this;
        }

        public Criteria andUsexNotBetween(Integer value1, Integer value2) {
            addCriterion("USex not between", value1, value2, "usex");
            return (Criteria) this;
        }

        public Criteria andUgradeIsNull() {
            addCriterion("UGrade is null");
            return (Criteria) this;
        }

        public Criteria andUgradeIsNotNull() {
            addCriterion("UGrade is not null");
            return (Criteria) this;
        }

        public Criteria andUgradeEqualTo(Integer value) {
            addCriterion("UGrade =", value, "ugrade");
            return (Criteria) this;
        }

        public Criteria andUgradeNotEqualTo(Integer value) {
            addCriterion("UGrade <>", value, "ugrade");
            return (Criteria) this;
        }

        public Criteria andUgradeGreaterThan(Integer value) {
            addCriterion("UGrade >", value, "ugrade");
            return (Criteria) this;
        }

        public Criteria andUgradeGreaterThanOrEqualTo(Integer value) {
            addCriterion("UGrade >=", value, "ugrade");
            return (Criteria) this;
        }

        public Criteria andUgradeLessThan(Integer value) {
            addCriterion("UGrade <", value, "ugrade");
            return (Criteria) this;
        }

        public Criteria andUgradeLessThanOrEqualTo(Integer value) {
            addCriterion("UGrade <=", value, "ugrade");
            return (Criteria) this;
        }

        public Criteria andUgradeIn(List<Integer> values) {
            addCriterion("UGrade in", values, "ugrade");
            return (Criteria) this;
        }

        public Criteria andUgradeNotIn(List<Integer> values) {
            addCriterion("UGrade not in", values, "ugrade");
            return (Criteria) this;
        }

        public Criteria andUgradeBetween(Integer value1, Integer value2) {
            addCriterion("UGrade between", value1, value2, "ugrade");
            return (Criteria) this;
        }

        public Criteria andUgradeNotBetween(Integer value1, Integer value2) {
            addCriterion("UGrade not between", value1, value2, "ugrade");
            return (Criteria) this;
        }

        public Criteria andUclassIsNull() {
            addCriterion("UClass is null");
            return (Criteria) this;
        }

        public Criteria andUclassIsNotNull() {
            addCriterion("UClass is not null");
            return (Criteria) this;
        }

        public Criteria andUclassEqualTo(Integer value) {
            addCriterion("UClass =", value, "uclass");
            return (Criteria) this;
        }

        public Criteria andUclassNotEqualTo(Integer value) {
            addCriterion("UClass <>", value, "uclass");
            return (Criteria) this;
        }

        public Criteria andUclassGreaterThan(Integer value) {
            addCriterion("UClass >", value, "uclass");
            return (Criteria) this;
        }

        public Criteria andUclassGreaterThanOrEqualTo(Integer value) {
            addCriterion("UClass >=", value, "uclass");
            return (Criteria) this;
        }

        public Criteria andUclassLessThan(Integer value) {
            addCriterion("UClass <", value, "uclass");
            return (Criteria) this;
        }

        public Criteria andUclassLessThanOrEqualTo(Integer value) {
            addCriterion("UClass <=", value, "uclass");
            return (Criteria) this;
        }

        public Criteria andUclassIn(List<Integer> values) {
            addCriterion("UClass in", values, "uclass");
            return (Criteria) this;
        }

        public Criteria andUclassNotIn(List<Integer> values) {
            addCriterion("UClass not in", values, "uclass");
            return (Criteria) this;
        }

        public Criteria andUclassBetween(Integer value1, Integer value2) {
            addCriterion("UClass between", value1, value2, "uclass");
            return (Criteria) this;
        }

        public Criteria andUclassNotBetween(Integer value1, Integer value2) {
            addCriterion("UClass not between", value1, value2, "uclass");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Users
     *
     * @mbg.generated do_not_delete_during_merge Thu Dec 20 04:55:17 PST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Users
     *
     * @mbg.generated Thu Dec 20 04:55:17 PST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}